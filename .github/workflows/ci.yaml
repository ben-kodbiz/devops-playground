name: CI

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

jobs:
  s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc

      - name: Compile proto files
        run: make -C s3 compile

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: s3

      - name: Build and run short tests
        run: make -C s3 build

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: s3
          file: s3/Dockerfile
          pull: true
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/s3:latest
            ghcr.io/${{ github.repository }}/s3:1.0.0

  dynamo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc

      - name: Compile proto files
        run: make -C dynamo compile

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: dynamo

      - name: Build and run short tests
        run: make -C dynamo build

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: dynamo
          file: dynamo/Dockerfile
          pull: true
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/dynamo:latest
            ghcr.io/${{ github.repository }}/dynamo:1.0.0

  gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc

      - name: Compile proto files
        run: make -C gateway compile

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: gateway

      - name: Build and run short tests
        run: make -C gateway build

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: gateway
          file: gateway/Dockerfile
          pull: true
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/gateway:latest
            ghcr.io/${{ github.repository }}/gateway:1.0.0

  cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: cli

      - name: Build and run short tests
        run: make -C cli build

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: cli
          file: cli/Dockerfile
          pull: true
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/cli:latest
            ghcr.io/${{ github.repository }}/cli:1.0.0

  consul:
    needs: [s3, dynamo, gateway, cli]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc kind terraform k6

      - name: Run all tests
        run: make ci ENVIRONMENT=consul

  nginx:
    needs: [s3, dynamo, gateway, cli]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc kind terraform k6

      - name: Run all tests
        run: make ci ENVIRONMENT=nginx

  argorollouts:
    needs: [ s3, dynamo, gateway, cli ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install protobuf protoc-gen-go protoc-gen-go-grpc kind terraform k6

      - name: Run all tests
        run: make ci ENVIRONMENT=nginx TF_VAR_argorollouts_enabled=true
