apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels: &labels
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: AWS_S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: aws_s3_endpoint
            - name: AWS_S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: aws_s3_bucket
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMap }}
                  key: aws_region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret }}
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret }}
                  key: aws_secret_access_key
            - name: S3_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret }}
                  key: s3_token
            - name: S3_GRPC_PORT
              value: "8080"
            - name: S3_METRICS_PORT
              value: "9090"
          ports:
            - name: grpc
              protocol: TCP
              containerPort: 8080
            - name: metrics
              protocol: TCP
              containerPort: 9090
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
            initialDelaySeconds: 10
      imagePullSecrets:
        - name: {{ .Values.image.secret }}