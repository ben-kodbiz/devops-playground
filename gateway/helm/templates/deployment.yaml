{{- if not .Values.argoRollouts.enabled }}
{{- range $name, $service := .Values.services }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels: &labels
    app: {{ $.Release.Name }}
    name: {{ $name }}
spec:
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
      annotations:
        {{- if $.Values.consul.enabled }}
        'consul.hashicorp.com/connect-inject': "true"
        'consul.hashicorp.com/connect-service': "{{ $.Release.Name }}-{{ $name }}"
        'consul.hashicorp.com/connect-service-port': "http"
        'consul.hashicorp.com/connect-service-upstreams': "s3:8081,dynamo:8082,tempo:8083"
        {{- with $.Values.resources }}
        'consul.hashicorp.com/sidecar-proxy-memory-request': "{{ .requests.memory }}"
        'consul.hashicorp.com/sidecar-proxy-cpu-request': "{{ .requests.cpu }}"
        'consul.hashicorp.com/sidecar-proxy-memory-limit': "{{ .limits.memory }}"
        'consul.hashicorp.com/sidecar-proxy-cpu-limit': "{{ .limits.cpu }}"
        {{- end }}
        {{- end }}
    spec:
      serviceAccountName: {{ $.Release.Name }}
      containers:
        - name: {{ $.Release.Name }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $service.tag }}"
          volumeMounts:
            {{- if $.Values.csi.enabled }}
            - name: {{ $.Release.Name }}
              mountPath: "/mnt/{{ $.Release.Name }}"
              readOnly: true
            {{- end }}
          env:
            - name: S3_URL
              {{- if $.Values.consul.enabled }}
              value: "localhost:8081"
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: s3_url
              {{- end }}
            - name: DYNAMO_URL
              {{- if $.Values.consul.enabled }}
              value: "localhost:8082"
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: dynamo_url
              {{- end }}
            - name: TEMPO_URL
              {{- if $.Values.consul.enabled }}
              value: "localhost:8083"
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: tempo_url
              {{- end }}
            - name: S3_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: s3_token
            - name: DYNAMO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: dynamo_token
            - name: GATEWAY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: gateway_token
            - name: GATEWAY_HTTP_PORT
              value: "8080"
            - name: GATEWAY_METRICS_PORT
              value: "9090"
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
            - name: metrics
              protocol: TCP
              containerPort: 9090
          resources:
            {{- with $.Values.resources }}
            requests:
              memory: {{ .requests.memory }}
              cpu: {{ .requests.cpu }}
            limits:
              memory: {{ .limits.memory }}
              cpu: {{ .limits.cpu }}
            {{- end }}
          startupProbe:
            httpGet:
              path: /monitoring/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /monitoring/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /monitoring/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        {{- if $.Values.csi.enabled }}
        - name: {{ $.Release.Name }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $.Release.Name }}
        {{- end }}
{{- end }}
{{- end }}
