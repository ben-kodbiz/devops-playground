{{- range $name, $deployment := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels: &labels
    app: {{ $.Release.Name }}
    version: {{ $name }}
spec:
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
      annotations:
        'consul.hashicorp.com/connect-inject': "true"
        'consul.hashicorp.com/connect-service': "{{ $.Release.Name }}"
        'consul.hashicorp.com/connect-service-port': "http"
        'consul.hashicorp.com/connect-service-upstreams': "s3:8081,dynamo:8082"
        'consul.hashicorp.com/service-tags': "{{ $name }}"
    spec:
      serviceAccountName: {{ $.Release.Name }}
      containers:
        - name: {{ $.Release.Name }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $deployment.tag }}"
          volumeMounts:
            - name: {{ $.Release.Name }}
              mountPath: "/mnt/{{ $.Release.Name }}"
              readOnly: true
          env:
            - name: S3_URL
              value: "localhost:8081"
            - name: DYNAMO_URL
              value: "localhost:8082"
            - name: S3_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: s3_token
            - name: DYNAMO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: dynamo_token
            - name: GATEWAY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}
                  key: gateway_api_key
            - name: GATEWAY_HTTP_PORT
              value: "8080"
            - name: GATEWAY_METRICS_PORT
              value: "9090"
            - name: GATEWAY_DEPLOYMENT
              value: {{ $name }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
            - name: metrics
              protocol: TCP
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
      volumes:
        - name: {{ $.Release.Name }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $.Release.Name }}
{{- end }}